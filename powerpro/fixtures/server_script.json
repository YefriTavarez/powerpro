[
 {
  "allow_guest": 0,
  "api_method": "igcaribe.client.get_uom_categories",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-26 22:29:44.071443",
  "module": null,
  "name": "igcaribe.client.get_uom_categories",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "item_name=frappe.form_dict.item_name_id\n\n\nif not item_name:\n    frappe.throw(\"Parameter 'item_name_id' is required for the function 'igcaribe.client.get_uom_categories'\")\n\n\nif not frappe.db.exists(\"Item Name\", item_name):\n    frappe.throw(f\"'Item Name' with id of {item_name} was not found in the Database.\")\n\n\nuom_docfields = frappe.get_list(\"DocField\", filters={\n    \"parenttype\": \"DocType\",\n    \"parent\": \"Item Generator\",\n    \"parentfield\": \"fields\",\n    \"fieldtype\": \"Link\",\n    \"options\": \"UOM\"\n}, fields=[\"fieldname\"])\n\nlocal_cache = dict()\n\nfields_with_categories = dict()\n\nfor docfield in uom_docfields:\n    uom_category = frappe.db.get_value(\"Item Selectable Fields\", {\n        \"item_field_name\": docfield.fieldname,\n        \"parent\": item_name,\n    }, \"uom_category\")\n    \n    fields_with_categories[docfield.fieldname] = uom_category\n    \n    if not uom_category:\n        continue\n    \n    if uom_category in local_cache:\n        continue # multiple fields can have the same UOM Category\n    \n    local_cache[uom_category] = frappe.get_list(\n        \"UOMs\", { \"parenttype\": \"UOM Category\", \"parent\": uom_category }, pluck=\"uom\"    \n    )\n    \n\nfrappe.response[\"message\"] = {\n    \"fields_with_categories\": fields_with_categories,\n    \"uoms_by_category\": local_cache,\n}\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "igcaribe.client.get_all_item_groups",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-26 23:26:07.789415",
  "module": null,
  "name": "igcaribe.client.get_all_item_groups",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "all_item_groups = frappe.get_all(\"Item Group\", filters={\n    \n}, fields=[\"name\", \"parent_item_group\", \"is_group\"])\n\n\nmessage = dict()\n\nfor item_group in all_item_groups:\n    message[item_group.name] = item_group\n\n\nfrappe.response[\"message\"] = message\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-27 01:24:54.832920",
  "module": null,
  "name": "Item Generator - Before Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Item Generator",
  "script": "item_name = frappe.get_doc(\"Item Name\", doc.item)\n\nif template := item_name.item_description_template:\n    doc.description = frappe.render_template(template, doc.as_dict())\n\nelse:\n    frappe.throw(\"No se especificó el valor para el campo 'Plantilla para la Descripción' en el doctype Nombre de Producto\")\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "igcaribe.client.create_sku_based_on_item_generator",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-27 02:50:51.206784",
  "module": null,
  "name": "igcaribe.client.create_sku_based_on_item_generator",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "if not frappe.form_dict.item_generator_id:\n    frappe.throw(\"Parameter 'item_generator_id' is required\")\n\n\nif not frappe.db.exists(\"Item Generator\", frappe.form_dict.item_generator_id):\n    frappe.throw(f\"Item Generator {frappe.form_dict.item_generator_id} not found\")\n\nitem_generator = frappe.get_doc(\"Item Generator\", frappe.form_dict.item_generator_id)\n\n\nif not frappe.db.exists(\"Item Name\", item_generator.item):\n    frappe.throw(f\"Item Name {item_generator.item} not found\")\n\n\nitem_name = frappe.get_doc(\"Item Name\", item_generator.item)\n\n\nitem = frappe.new_doc(\"Item\")\nitem.update({\n\t# \"item_code\": primary_key,\n\t\"item_name\": item_name.name,\n\t# \"naming_series\": naming_series,\n\t\"description\": item_generator.description,\n\t\"is_purchase_item\": 0,\n\t\"is_sales_item\": 1,\n\t\"is_stock_item\": 0,\n\t\"custom_item_group_1\": item_name.item_group_1,\n\t\"custom_item_group_2\": item_name.item_group_2,\n\t\"custom_item_group_3\": item_name.item_group_3,\n\t\"custom_item_group_4\": item_name.item_group_4,\n\t\"custom_item_group_5\": item_name.item_group_5,\n\t\"item_group\": item_name.item_group_5 or item_name.item_group_4 or item_name.item_group_3 or item_name.item_group_2 or item_name.item_group_1,\n\t\"allow_alternative_item\": 1,\n\t\"default_material_request_type\": \"Purchase\",\n\t\"include_item_in_manufacturing\": 1,\n\t\"item_type\": item_name.item_type,\n\t\"reference_type\": item_generator.doctype,\n\t\"reference_name\": item_generator.name,\n\t\"stock_uom\": item_name.default_stock_uom,\n\t\"valuation_method\": \"FIFO\",\n\t# \"product_details\": item_generator.data,\n\t# \"smart_hash\": smart_hash,\n})\n\nitem.flags.ignore_permissions = True\nitem.flags.ignore_mandatory = True\n\nitem.save()\n\nfrappe.response[\"message\"] = item.name\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "igcaribe.query.get_item_connectivity",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-29 01:12:02.497163",
  "module": null,
  "name": "igcaribe.query.get_item_connectivity",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Item Generator",
  "script": "doctype=frappe.form_dict.doctype\ntxt=frappe.form_dict.txt\nsearchfield=frappe.form_dict.searchfield\nstart=frappe.form_dict.start\npage_len=frappe.form_dict.page_len\nfilters=frappe.form_dict.filters\n\nsearchstr = \"%%\"\nif txt:\n    searchstr = f\"%{txt}%\"\n\nout = frappe.db.sql(\n    \"\"\"\n        Select\n            parent.item_connectivity\n        From\n            `tabItem Connectivity` As parent\n        Inner Join\n            `tabItem Name Link` As child\n            On child.parenttype = \"Item Connectivity\"\n                And child.parentfield = \"item_names\"\n                And child.parent = parent.name\n        Where\n            item_connectivity Like {searchstr!r}\n    \"\"\", as_list=True\n)\n\nfrappe.local.response.update({\n    \"results\": out\n})",
  "script_type": "API"
 }
]